swagger: "2.0"
info:
  description: "这是个用于研发博客系统的，基于nodejs，用koa框架开发的API文档规范."
  version: "1.0.0"
  title: "Koa Blog"
  contact:
    email: "1820166258@qq.com"
# host: "petstore.swagger.io"
# basePath: "/v2"
tags:
- name: "user"
  description: "用户"
- name: "article"
  description: "博客"
- name: "comment"
  description: "评论"
- name: "users"
  description: "后台控制用户"
- name: "articles"
  description: "后台控制博客"
- name: "comments"
  description: "后台控制评论"
  
schemes:
- "http"
paths:
  /users/:
    get:
      tags:
      - "users"
      summary: "后台获取所有用户信息"
      description: "获取所有用户信息"
      produces:
      - "application/json"
      responses:
        200:
          description: "返回成功"
          schema:
            type: "object"
            properties:
              article_num:
                type: "number"
                description: "博客数量"
              comment_num: 
                type: "number"
                description: "评论数量"
              users:
                type: "array"
                description: "数组对象"
                items:
                  type: "object"
                  properties:
                    user_id:
                      type: "number"
                      description: "用户ID"
                    user_name:
                      type: "string"
                      description: "用户名字"
                    user_avatar:
                      type: "string"
                      description: "用户头像链接"
                    user_role:
                      type: "string"
                      description: "用户角色"               
    # post:
    #   tages:
    #   - "user"
    #   summary: "后台添加某些用户"
    #   description: "后台添加某些用户"
    #   produces:
    #   - "application/json"
    #   parameters:
    #   - in: "body"
    #     name: "body"
    #     description: "用户名数组"
    #     required: "true"
    #     schema:
    #       type: "array"
    #       items:
    #         type: "object"
    #         properties:
    #           user_name: "string"
    #           user_password: "string"
    #   responses:
    #     200:
    #       description: "添加成功"
        
      
      
    
    # put:
    #   tags:
    #   - "users"
    #   summary: "前台更新用户信息"
    #   description: "更新用户信息"
    #   produces:
    #   - "application/json"
    #   parameters: 
    #   - in: "body"
    #     name: "body"
    #     description: "用户ID"
    #     schema:
    #       type: "object"
    #       properties:
            
    #   responses:
      
    delete:
      tags:
      - "users"
      summary: "批量删除用户"
      description: "批量删除用户"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "用户ID数组"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              user_id: 
                type: "number"
      responses:
        200: 
          description: "ok"
      
  /user/code:
    post:
      tags:
      - "user"
      summary: "前台获取验证码"
      description: "用户注册前先填写邮箱获取验证码"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "邮箱"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
              description: "邮箱"  
      responses:

        200:
          description: "已发送"
          schema:
            type: 'object'
            properties:
              user_activation_code:
                type: 'string'
                description: "激活码"
              code_expires:
                type: "string"
                description: '有效期'
        403:
          description: "邮箱已注册"
        404: 
          description: "邮箱不存在"
        
      
      
  /user/register:
    post:
      tags:
      - "user"
      summary: "前台注册"
      description: "用户得到验证码后注册"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "密码，用户名，邮箱，激活码，用户角色"
        required: true
        schema:
          type: "object"
          properties:
            password:
              type: "string"
              description: "密码"  
            user_name:
              type: "string"
              description: "用户名"  
            email:
              type: "string"
              description: "邮箱"  
            activation_code:
              type: "string"
              description: "激活码"
            user_role:
              type: "string" 
              description: "用户角色"
            
          
              

      responses:
          200:
            description: "成功 "
          401:
           description: "用户名已存在"
          402:
           description: "邮箱已注册"
          405:
           description: "验证码错误"
          
  /user/login:
    post:
      tags:
      - "user"
      summary: "前台用户登录"
      description: "用户登录平台"
      # operationId: "loginUser"
      produces:
      # - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "邮箱，密码"
        required: true
        schema:
          type: "object"
          properties:
            password:
              type: "string"
              description: "密码"  
            email:
              type: "string"
              description: "邮箱"  
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              user_name:
                type: "string"
                description: "用户名"   
        403:
          description: "没有这个用户"
        401:
          description: "密码不正确"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "前台注销"
      description: "用户注销账号"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "注销成功"
        500:
          description: "服务器发生错误"
          
  /user/{username}:
    post:
      tags:
      - "user"
      summary: "前台获取用户信息"
      description: "获取个人中心"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "用户名 "
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "用户ID"
        required: true
        schema:
            $ref: "#/definitions/User"  

      responses:
        200:
          description: "成功"
          schema:
            type: "object"
            properties:
              user_name:
                type: "string"
                description: "用户名"
              email:
                type: "string"
                description: "邮箱"
              article_num:
                type: "number"
                description: "所写博客数量"
              comment_num:
                type: "number"
                description: "所写评论数量"
        404:
          description: "查无此人"
                
       
    put:
      tags:
      - "user"
      summary: "前台更新用户信息"
      description: "更新用户信息，除了密码和邮箱"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "用户名"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "用户ID"
        required: true
        schema:
            type: "object"
            properties:
              user_id:
                type: 'number'
              user_name:
                type: 'string'
              user_email:
                type: 'string'
              user_pwd:
                type: 'string'
              user_role:
                type: 'string'
              user_status:
                type: 'string'
              user_avatar:
                type: 'string' 
      responses:
        200:
          description: "成功"
        403:
          description: "无权限"
    delete:
      tags:
      - "user"
      summary: "前台删除用户"
      description: "删除用户"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "用户被删除"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "用户ID"
        required: true
        schema:
          $ref: "#/definitions/User" 
      responses:
        200:
          description: "删除成功"
        404:
          description: "没有此用户"
          
  /user/{username}/email:
    post:
      tags:
      - "user"
      summary: "前台更新用户邮箱"
      description: "更新用户邮箱"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "用户名"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "新邮箱,用户ID,激活码"
        required: true
        schema:
            type: "object"
            properties:
              user_id:
                type: "number"
                description: "用户ID，存在cookie中"
              user_email:
                type: "string"
                description: "新邮箱"
              # activation_code:
              #   type: "string"
              #   description: "激活码"  
      responses:
          200:
            description: "成功"
          403:
            description: "邮箱已注册"
          # 404:
          #   description: "邮箱不存在"
          # 405:
          #   description: "验证码错误"      
  /user/{username}/pwd:
    post:
      tags:
      - "user"
      summary: "前台更新用户密码"
      description: "更新用户密码"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "用户名"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "旧密码,用户ID,新密码"
        required: true
        schema:
            type: "object"
            properties:
              user_id:
                type: "number"
                description: "用户ID，存在cookie中"
              old_password:
                type: "string"
                description: "旧密码"
              new_password:
                type: "string"
                description: "新密码"  
      responses:
          200:
            description: "成功"
          403:
            description: "邮箱已注册"
          # 404:
          #   description: "邮箱不存在"
          # 405:
          #   description: "验证码错误"                  
  /article/:
    get:
      tags:
      - "article"
      summary: "前台获取全部博客"
      description: "前台获取全部博客"
      produces:
      - "application/json"
      parameters:
      - name: 'page'
        in: "body"
        description: "页数"
        type: 'string'
        required: true
      responses:
        200:
          description: "成功"
          schema:
            type: "object"
            properties:
                page:
                  type: "number"
                  description: "当前页数"
                allpage_count: 
                  type: "number"
                  description: "总页数"
                articles:
                  type: "array"
                  description: "数组对象"
                  items:
                    type: "object"
                    properties:
                      id:
                        type: "number"
                        description: "博客ID"
                      content:
                        type: "string"
                        description: "博客内容"
                      title:
                        type: "string"
                        description: "博客标题"
                      category:
                        type: "string"
                        description: "博客种类"
                      date:
                        type: "string"
                        description: "博客更新时间"
                      user_id: 
                        type: "number"
                        description: "作者ID"
                      user_name:
                        type: "string"
                        description: "作者名字"
                      user_avatar:
                        type: "string"
                        description: "作者头像链接"

  /article/{sort}/{page}:
    get:
      tags:
      - "article"
      summary: "前台获取部分博客"
      description: "获取部分博客"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "path"
        description: "第几页 "
        required: true
        type: "string"
      - name: "sort"
        in: "path"
        description: "以什么分类，类别分为：new,web,android,design,product"
        type: "string"
        required: true
      responses:
        200:
          description: "成功"
          schema:
            type: "object"
            properties:
                page:
                  type: "number"
                  description: "当前页数"
                allpage_count: 
                  type: "number"
                  description: "总页数"
                articles:
                  type: "array"
                  description: "数组对象"
                  items:
                    type: "object"
                    properties:
                      id:
                        type: "number"
                        description: "博客ID"
                      content:
                        type: "string"
                        description: "博客内容"
                      title:
                        type: "string"
                        description: "博客标题"
                      category:
                        type: "string"
                        description: "博客种类"
                      date:
                        type: "string"
                        description: "博客更新时间"
                      user_id: 
                        type: "number"
                        description: "作者ID"
                      user_name:
                        type: "string"
                        description: "作者名字"
                      user_avatar:
                        type: "string"
                        description: "作者头像链接"
                      # comment_num:
                      #   type: "number"
                      #   description: "博客评论数量"
  /articles/oneAllTitle:
    post:
      tags:
      - "articles"
      summary: "前后台共用：获取某人所有博客标题"
      description: "获取某人所有博客标题"
      produces:
      - "application/json"
      parameters: 
      - name: "body"
        in: "body"
        description: "用户ID(存在cookie里)"
        required: true
        schema:
          type: "object"
          properties:
            user_id: 
              type: "number"
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                article_title:
                  type: "string"
                article_id:
                  type: "number"
          
  /articles/deletion:
    delete:
      tags:
      - "articles"
      summary: "后台删除部分博客"
      description: "批量删除部分博客"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "博客ID"
        required: true
        schema:
          type: "array"
          items: 
            type: "object"
            properties:
              article_id:
                type: "number"
      responses:
        200:
          description: "ok"  
             
    
  /article/addition:
    post:
      tags: 
      - "article"
      summary: "前台添加博客"
      description: "前台添加博客"
      produces: 
      - "application/json"
      parameters: 
      - name: "body"
        in: "body"
        description: "博客内容，博客发布时间，博客作者id(存在cookie里)，博客种类"
        required: true
        schema:
          type: "object"
          properties:
            article_content:
              type: "string"
            time:
              type: "string"
            article_author_id:
              type: "number"
            article_category:
              type: "string"
      responses:
        200:
          description: "成功"
        403:
          description: "无权限"
        
  /article/{title}:
    post:
      tags: 
      - "article"
      summary: "前台获取某篇博客"
      description: "获取某篇博客"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "path"
        description: "博客标题"
        required: true
        type: "string"
      - name: "article_id"
        in: "body"
        description: "博客ID"
        required: true
        schema:
            type: "object"
            properties:
              atricle_id:
                type: "number"
                description: "博客ID"
      responses:
        200:
          description: "成功"
          schema:
            type: "object"
            properties:
              article:
                type: "object"
                properties:
                  article_id: 
                    type: "number"
                  article_title:
                    type: "string"
                  article_content:
                    type: "string"
                  #article_author_name:
                  user_name:
                    type: "string"
                  #article_author_avatar:
                  user_avatar:
                    type: "string"
                  article_category:
                    type: "string"
                  comment_num:
                    type: "string"
              comments:
                type: "array"
                items:
                  type: "object"
                  properties:
                    comment:
                      type: "string"
                    date:
                      type: "string"
                    comment_author_name:
                      type: "string"
                    comment_author_avatar:
                      type: "string"
                    
        404:
          description: "文章不存在"

                
              
              
          
    
        
      
    put:
      tags:
      - "article"
      summary: "前台更新博客"
      description: "更新博客"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "path"
        description: "文章名"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "用户ID，博客ID"
        required: true
        schema:
            type: "object"
            description: "博客ID，用户ID，更新内容，更新标题，种类，更新时间"
            properties:
              article_id:
                type: "number"
                description: "博客ID"
              article_content:
                type: "string"
                description: "博客内容"
              user_id:
                  type: "number"
                  description: "用户ID"
              article_title:
                  type: "string"
                  description: "博客标题"
              category:
                  type: "string"
                  description: "博客种类"
              time:
                  type: "string"
                  description: "博客更新时间"
      responses:
        200:
          description: "成功"
        401:
          description: "未登录"
        404:
          description: "无此文章"
        403:
          description: "无权限"
          
    delete:
      tags:
      - "article"
      summary: "前台删除博客"
      description: "删除博客"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "path"
        description: "博客标题"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "博客ID"
        required: true
        schema:
          type: "object"
          properties:
            article_id:
              type: "number"
              
      responses:
        200:
          description: "删除成功"
        401:
          description: "未登录"
        404:
          description: "无此博客"
        403:
          description: "无权限"
        
          
          
  /comment/:
    post:
      tag:
      - "comment"
      summary: "前台添加评论"
      description: "前台添加评论"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "评论博客ID，评论者ID"
        schema:
          type: "object"
          properties:
            article_id:
              type: "number"
            comment_author_id:
              type: "number"
            comment_time:
              type: "string"
            comment_content:
              type: "string"
            
      responses:
        200:
          description: "评论成功"
        403:
          description: "无权限"

    delete:
      tags:
      - "comment"
      summary: "前台删除评论"
      description: "删除评论"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "评论ID，以及评论者"
        schema:
          type: "object"
          properties:
            comment_id:
             type: "number"
            user_id:
              type: "number"
        
      responses:
        200:
          description: "删除成功"
        401:
          description: "未登录"
        404:
          description: "无此评论"
        403:
          description: "无权限"
  /comments/deletion:
    delete:
      tags:
      - "comments"
      summary: "后台删除评论"
      description: "根据词典批量删除"
      produces:
      - "application/json"
      parameters:
      - name: "body"
      in: "body"
      description: "词典"
      type: "string"
      responses:
        200:
          description: "删除成功"
          schema:
            type: "object"
            properties:
              comment:
                type: "array"
                itmes:
                  type: "object"
                  properties:
                    comment_content:
                      type: "string"
                    comment_author:
                      type: "string"
                    comment_time:
                      type: "string"
                    comment_article:
                      type: "string"
              comment_num:
                type: "number"
                
                    
                      
                
            
            
          
        
      
        
      
      
    
    
  
                     
  
definitions:
  User:
    type: "object"
    properties:
      user_id:
        type: "number"
        description: "用户ID,在cookie中" 
    description: "User Status"
    

#   ApiResponse:
#     type: "object"
#     properties:
#       code:
#         type: "integer"
#         format: "int32"
#       type:
#         type: "string"
#       message:
#         type: "string"
# externalDocs:
#   description: "Find out more about Swagger"
#   url: "http://swagger.io"